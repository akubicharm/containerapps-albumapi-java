apiVersion: v1
items:
- apiVersion: v1
  kind: Secret
  metadata:
    labels:
      app: postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/instance: postgresql
    name: postgresql
  stringData:
    database-name: album
    database-password: album
    database-user: album
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
    labels:
      app: postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/instance: postgresql
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    labels:
      app: postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/instance: postgresql
    name: postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: postgresql
      app.kubernetes.io/component: postgresql
      app.kubernetes.io/instance: postgresql
    name: postgresql
  spec:
    replicas: 1
    selector:
      matchLabels:
        deployment: postgresql
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          deployment: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: 'image-registry.openshift-image-registry.svc:5000/openshift/postgresql:15-el9'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /usr/libexec/check-container
              - --live
            initialDelaySeconds: 120
            timeoutSeconds: 10
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /usr/libexec/check-container
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
kind: List
metadata: {}
